ES6 Features:- (inroduced from 2015)
-------------


1. Block Scoped Variable:
    a.let
    b.const 

2. String Interpolution:
     * interpolation is the process of inserting strings or values into an existing string for various purposes.

     Ex:
        const name = "kirana"
        consol.log(`Hello, ${name}!!`);

3. Arrow function:
    *  a new way to write anonymous function expressions, and are similar to lambda functions in some other 
       programming languages

       Ex:
            let add = (x,y)=>x+y;
            consol.log(add(10,20));

4. Spread Operator:
    * it used to merge the two Array.

    Ex: 
        let a = [2,4,6,8]
        let b = [1,3,5,7]
        let c = [...a,...b]
        consol.log(c)  // [2,4,6,8,1,3,5,7]

5. Destructuring:
    * it is a way to extract values from array (or) Object and assign them to a variable.
    * it allow you to unpack values from arrays or properties from object into distinct variable.

    Ex: 
        //Array
        const number = [1,2,3]
        const[a,b,c] = numbers

        //Object Destructuring
        const person = {
            name:"kirana"
            age: 22
            phno: 9876543210  
        }

        const {name,age,phno} = person;

6. for/Of loop:
    * it is used to iterate an Object.
        Ex: 
            const cars = ["BMW","Volvo","Mini"]
            let text = "";

            for(let x of cars)
            {
                text=text+x+" ";
            }

7. Classes:
    * using class keyword we can create class 
    * And Always add a method named 'constructor()'

    Ex:
        class ClassName{
            constructor()
            {
                .....
            }
        }

8. Promise :
    * A promise is an Object representing the eventual completion or failure of am asynchronous operation.
    * it Consiste of Producing code and Consuming Code.

    Ex:
        let promise = new Promise(function(resolve,reject){
            let a =10
            if(a%2==0)
                resolve("Resolved")
            else
                reject("Rejected)
        }) //
        producing code 

        //Consuming Code.
        promise.then(function(result){
                console.log(result)
            }).catch(function(result){
                console.log(result)
            });